{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js\";\nimport React from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport Link from 'next/link';\n\nconst CampaignShow = ({\n  address,\n  minimumContribution,\n  balance,\n  requestsCount,\n  approversCount,\n  manager\n}) => {\n  const renderCards = () => {\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create requests to withdraw money.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver.'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who have already donated to this campaign.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend.'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: renderCards()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(ContributeForm, {\n            address: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/campaigns/[campaignAddress]/requests\",\n          as: `/campaigns/${address}/requests`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              children: \"View Requests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nCampaignShow.getInitialProps = async ctx => {\n  const campaign = Campaign(ctx.query.campaignAddress);\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    address: ctx.query.campaignAddress,\n    minimumContribution: summary[0],\n    balance: summary[1],\n    requestsCount: summary[2],\n    approversCount: summary[3],\n    manager: summary[4]\n  };\n};\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js"],"names":["React","Card","Grid","Button","Layout","Campaign","web3","ContributeForm","Link","CampaignShow","address","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","getInitialProps","ctx","campaign","query","campaignAddress","summary","methods","getSummary","call"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport Link from 'next/link';\n\nconst CampaignShow = ({\n  address,\n  minimumContribution,\n  balance,\n  requestsCount,\n  approversCount,\n  manager,\n}) => {\n  const renderCards = () => {\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of Manager',\n        description:\n          'The manager created this campaign and can create requests to withdraw money.',\n        style: { overflowWrap: 'break-word' },\n      },\n      {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description:\n          'You must contribute at least this much wei to become an approver.',\n      },\n      {\n        header: requestsCount,\n        meta: 'Number of Requests',\n        description:\n          'A request tries to withdraw money from the contract. Requests must be approved by approvers.',\n      },\n      {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description:\n          'Number of people who have already donated to this campaign.',\n      },\n      {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (ether)',\n        description:\n          'The balance is how much money this campaign has left to spend.',\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  };\n\n  return (\n    <Layout>\n      <h3>Campaign Show</h3>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={10}>{renderCards()}</Grid.Column>\n\n          <Grid.Column width={6}>\n            <ContributeForm address={address} />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Link\n            href='/campaigns/[campaignAddress]/requests'\n            as={`/campaigns/${address}/requests`}\n          >\n            <a>\n              <Button primary>View Requests</Button>\n            </a>\n          </Link>\n        </Grid.Row>\n      </Grid>\n    </Layout>\n  );\n};\n\nCampaignShow.getInitialProps = async (ctx) => {\n  const campaign = Campaign(ctx.query.campaignAddress);\n\n  const summary = await campaign.methods.getSummary().call();\n\n  return {\n    address: ctx.query.campaignAddress,\n    minimumContribution: summary[0],\n    balance: summary[1],\n    requestsCount: summary[2],\n    approversCount: summary[3],\n    manager: summary[4],\n  };\n};\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}