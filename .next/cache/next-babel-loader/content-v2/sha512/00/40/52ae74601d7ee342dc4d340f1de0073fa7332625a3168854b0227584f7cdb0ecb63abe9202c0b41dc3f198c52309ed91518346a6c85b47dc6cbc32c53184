{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js\",\n    _this = this;\n\nimport React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\n\nvar CampaignShow = function CampaignShow(_ref) {\n  var minimumContribution = _ref.minimumContribution,\n      balance = _ref.balance,\n      requestsCount = _ref.requestsCount,\n      approversCount = _ref.approversCount,\n      manager = _ref.manager;\n\n  var renderCards = function renderCards() {\n    var items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create requests to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CampaignShow;\n\nCampaignShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var campaign, summary;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            campaign = Campaign(ctx.query.campaignAddress);\n            _context.next = 3;\n            return campaign.methods.getSummary().call();\n\n          case 3:\n            summary = _context.sent;\n            return _context.abrupt(\"return\", {\n              minimumContribution: summary[0],\n              balance: summary[1],\n              requestsCount: summary[2],\n              approversCount: summary[3],\n              manager: summary[4]\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default CampaignShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignShow\");","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js"],"names":["React","Card","Layout","Campaign","CampaignShow","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","getInitialProps","ctx","campaign","query","campaignAddress","methods","getSummary","call","summary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,MALJC,mBAKI,QALJA,mBAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT,6EAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,EAQZ;AACEJ,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KARY,EAcZ;AACEF,MAAAA,MAAM,EAAEL,aADV;AAEEM,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAdY,CAAd;AAsBA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAxBD;;AA0BA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGD,WAAW,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAvCD;;KAAMN,Y;;AAyCNA,YAAY,CAACa,eAAb;AAAA,uEAA+B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,QADuB,GACZhB,QAAQ,CAACe,GAAG,CAACE,KAAJ,CAAUC,eAAX,CADI;AAAA;AAAA,mBAGPF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAHO;;AAAA;AAGvBC,YAAAA,OAHuB;AAAA,6CAKtB;AACLpB,cAAAA,mBAAmB,EAAEoB,OAAO,CAAC,CAAD,CADvB;AAELnB,cAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD,CAFX;AAGLlB,cAAAA,aAAa,EAAEkB,OAAO,CAAC,CAAD,CAHjB;AAILjB,cAAAA,cAAc,EAAEiB,OAAO,CAAC,CAAD,CAJlB;AAKLhB,cAAAA,OAAO,EAAEgB,OAAO,CAAC,CAAD;AALX,aALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAerB,YAAf","sourcesContent":["import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\n\nconst CampaignShow = ({\n  minimumContribution,\n  balance,\n  requestsCount,\n  approversCount,\n  manager,\n}) => {\n  const renderCards = () => {\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of Manager',\n        description:\n          'The manager created this campaign and can create requests to withdraw money',\n        style: { overflowWrap: 'break-word' },\n      },\n      {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description:\n          'You must contribute at least this much wei to become an approver',\n      },\n      {\n        header: requestsCount,\n        meta: 'Number of Requests',\n        description:\n          'A request tries to withdraw money from the contract. Requests must be approved by approvers',\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  };\n\n  return (\n    <Layout>\n      <h3>Campaign Show</h3>\n      {renderCards()}\n    </Layout>\n  );\n};\n\nCampaignShow.getInitialProps = async (ctx) => {\n  const campaign = Campaign(ctx.query.campaignAddress);\n\n  const summary = await campaign.methods.getSummary().call();\n\n  return {\n    minimumContribution: summary[0],\n    balance: summary[1],\n    requestsCount: summary[2],\n    approversCount: summary[3],\n    manager: summary[4],\n  };\n};\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}