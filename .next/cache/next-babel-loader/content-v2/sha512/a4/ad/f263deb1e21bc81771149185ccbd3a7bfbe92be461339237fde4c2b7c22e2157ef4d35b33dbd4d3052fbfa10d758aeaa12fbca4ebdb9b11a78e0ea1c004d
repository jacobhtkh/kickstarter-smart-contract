{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js\";\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\n\nconst CampaignShow = ({\n  minimumContribution,\n  balance,\n  requestsCount,\n  approversCount,\n  manager\n}) => {\n  const renderCards = () => {\n    const items = [{}];\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nCampaignShow.getInitialProps = async ctx => {\n  const campaign = Campaign(ctx.query.campaignAddress);\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    minimumContribution: summary[0],\n    balance: summary[1],\n    requestsCount: summary[2],\n    approversCount: summary[3],\n    manager: summary[4]\n  };\n};\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress].js"],"names":["React","Layout","Campaign","CampaignShow","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","getInitialProps","ctx","campaign","query","campaignAddress","summary","methods","getSummary","call"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,mBADoB;AAEpBC,EAAAA,OAFoB;AAGpBC,EAAAA,aAHoB;AAIpBC,EAAAA,cAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAG,CAAC,EAAD,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;AAkBAP,YAAY,CAACQ,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC5C,QAAMC,QAAQ,GAAGX,QAAQ,CAACU,GAAG,CAACE,KAAJ,CAAUC,eAAX,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,SAAO;AACLf,IAAAA,mBAAmB,EAAEY,OAAO,CAAC,CAAD,CADvB;AAELX,IAAAA,OAAO,EAAEW,OAAO,CAAC,CAAD,CAFX;AAGLV,IAAAA,aAAa,EAAEU,OAAO,CAAC,CAAD,CAHjB;AAILT,IAAAA,cAAc,EAAES,OAAO,CAAC,CAAD,CAJlB;AAKLR,IAAAA,OAAO,EAAEQ,OAAO,CAAC,CAAD;AALX,GAAP;AAOD,CAZD;;AAcA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\n\nconst CampaignShow = ({\n  minimumContribution,\n  balance,\n  requestsCount,\n  approversCount,\n  manager,\n}) => {\n  const renderCards = () => {\n    const items = [{}];\n  };\n\n  return (\n    <Layout>\n      <h3>Campaign Show</h3>\n    </Layout>\n  );\n};\n\nCampaignShow.getInitialProps = async (ctx) => {\n  const campaign = Campaign(ctx.query.campaignAddress);\n\n  const summary = await campaign.methods.getSummary().call();\n\n  return {\n    minimumContribution: summary[0],\n    balance: summary[1],\n    requestsCount: summary[2],\n    approversCount: summary[3],\n    manager: summary[4],\n  };\n};\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}