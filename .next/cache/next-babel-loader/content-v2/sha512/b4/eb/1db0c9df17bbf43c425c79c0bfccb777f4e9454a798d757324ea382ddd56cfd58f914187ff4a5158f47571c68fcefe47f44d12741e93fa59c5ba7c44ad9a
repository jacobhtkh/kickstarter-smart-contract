{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/components/RequestRow.js\";\nimport React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nconst RequestRow = ({\n  id,\n  request,\n  approversCount,\n  address\n}) => {\n  const {\n    Row,\n    Cell\n  } = Table;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApprove = async () => {\n    const campaign = Campaign(address);\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.approveRequest(id).send({\n      from: accounts[0]\n    });\n  };\n\n  const onFinalize = async () => {\n    const campaign = Campaign(address);\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.finalizeRequest(id).send({\n      from: accounts[0]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize,\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: web3.utils.fromWei(request.value, 'ether')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: [request.approvalCount, \"/\", approversCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: onApprove,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        basic: true,\n        onClick: onFinalize,\n        children: \"Finalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/components/RequestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","id","request","approversCount","address","Row","Cell","readyToFinalize","approvalCount","onApprove","campaign","accounts","eth","getAccounts","methods","approveRequest","send","from","onFinalize","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAC/D,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBV,KAAtB;AACA,QAAMW,eAAe,GAAGL,OAAO,CAACM,aAAR,GAAwBL,cAAc,GAAG,CAAjE;;AAEA,QAAMM,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAGX,QAAQ,CAACK,OAAD,CAAzB;AAEA,UAAMO,QAAQ,GAAG,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMH,QAAQ,CAACI,OAAT,CAAiBC,cAAjB,CAAgCd,EAAhC,EAAoCe,IAApC,CAAyC;AAC7CC,MAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AAD+B,KAAzC,CAAN;AAGD,GAPD;;AASA,QAAMO,UAAU,GAAG,YAAY;AAC7B,UAAMR,QAAQ,GAAGX,QAAQ,CAACK,OAAD,CAAzB;AAEA,UAAMO,QAAQ,GAAG,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMH,QAAQ,CAACI,OAAT,CAAiBK,eAAjB,CAAiClB,EAAjC,EAAqCe,IAArC,CAA0C;AAC9CC,MAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADgC,KAA1C,CAAN;AAGD,GAPD;;AASA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAET,OAAO,CAACkB,QAAvB;AAAiC,IAAA,QAAQ,EAAEb,eAA3C;AAAA,4BACE,QAAC,IAAD;AAAA,gBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBAAOC,OAAO,CAACmB;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAA,gBAAOvB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBrB,OAAO,CAACsB,KAA3B,EAAkC,OAAlC;AAAP;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAA,gBAAOtB,OAAO,CAACuB;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAA,iBACGvB,OAAO,CAACM,aADX,OAC2BL,cAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,IAAD;AAAA,gBACGD,OAAO,CAACkB,QAAR,GAAmB,IAAnB,gBACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,KAAK,MAA3B;AAA4B,QAAA,OAAO,EAAEX,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,IAAD;AAAA,gBACGP,OAAO,CAACkB,QAAR,GAAmB,IAAnB,gBACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,OAAO,EAAEF,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/CD;;AAiDA,eAAelB,UAAf","sourcesContent":["import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nconst RequestRow = ({ id, request, approversCount, address }) => {\n  const { Row, Cell } = Table;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApprove = async () => {\n    const campaign = Campaign(address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.approveRequest(id).send({\n      from: accounts[0],\n    });\n  };\n\n  const onFinalize = async () => {\n    const campaign = Campaign(address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.finalizeRequest(id).send({\n      from: accounts[0],\n    });\n  };\n\n  return (\n    <Row disabled={request.complete} positive={readyToFinalize}>\n      <Cell>{id}</Cell>\n      <Cell>{request.description}</Cell>\n      <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n      <Cell>{request.recipient}</Cell>\n      <Cell>\n        {request.approvalCount}/{approversCount}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button color='green' basic onClick={onApprove}>\n            Approve\n          </Button>\n        )}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button color='teal' basic onClick={onFinalize}>\n            Finalize\n          </Button>\n        )}\n      </Cell>\n    </Row>\n  );\n};\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}