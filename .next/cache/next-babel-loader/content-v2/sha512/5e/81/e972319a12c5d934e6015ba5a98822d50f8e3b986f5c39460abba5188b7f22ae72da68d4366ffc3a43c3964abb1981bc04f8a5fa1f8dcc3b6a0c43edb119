{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests.js\";\nimport React from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nconst RequestIndex = ({\n  campaignAddress,\n  requests,\n  approversCount,\n  requestCount\n}) => {\n  const {\n    Header,\n    Row,\n    HeaderCell,\n    Body\n  } = Table;\n\n  const renderRows = () => {\n    return requests.map((request, index) => {\n      return /*#__PURE__*/_jsxDEV(RequestRow, {\n        id: index,\n        request: request,\n        address: campaignAddress,\n        approversCount: approversCount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approval Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Finalize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        children: renderRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Found \", requestCount, \" requests.\", /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/campaigns/[campaignAddress]/requests/new\",\n        as: `/campaigns/${campaignAddress}/requests/new`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            floated: \"right\",\n            children: \"Add Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nRequestIndex.getInitialProps = async ctx => {\n  const {\n    campaignAddress\n  } = ctx.query;\n  const campaign = Campaign(campaignAddress);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const approversCount = await campaign.methods.approversCount().call();\n  const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  console.log(requests);\n  return {\n    campaignAddress,\n    requests,\n    requestCount,\n    approversCount\n  };\n};\n\nexport default RequestIndex;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests.js"],"names":["React","Button","Table","Link","Layout","Campaign","RequestRow","RequestIndex","campaignAddress","requests","approversCount","requestCount","Header","Row","HeaderCell","Body","renderRows","map","request","index","getInitialProps","ctx","query","campaign","methods","getRequestsCount","call","Promise","all","Array","parseInt","fill","element","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nconst RequestIndex = ({\n  campaignAddress,\n  requests,\n  approversCount,\n  requestCount,\n}) => {\n  const { Header, Row, HeaderCell, Body } = Table;\n\n  const renderRows = () => {\n    return requests.map((request, index) => {\n      return (\n        <RequestRow\n          key={index}\n          id={index}\n          request={request}\n          address={campaignAddress}\n          approversCount={approversCount}\n        />\n      );\n    });\n  };\n\n  return (\n    <Layout>\n      <h3>Requests</h3>\n\n      <Table>\n        <Header>\n          <Row>\n            <HeaderCell>ID</HeaderCell>\n            <HeaderCell>Description</HeaderCell>\n            <HeaderCell>Amount</HeaderCell>\n            <HeaderCell>Recipient</HeaderCell>\n            <HeaderCell>Approval Count</HeaderCell>\n            <HeaderCell>Approve</HeaderCell>\n            <HeaderCell>Finalize</HeaderCell>\n          </Row>\n        </Header>\n\n        <Body>{renderRows()}</Body>\n      </Table>\n      <div>\n        Found {requestCount} requests.\n        <Link\n          href='/campaigns/[campaignAddress]/requests/new'\n          as={`/campaigns/${campaignAddress}/requests/new`}\n        >\n          <a>\n            <Button primary floated='right'>\n              Add Request\n            </Button>\n          </a>\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nRequestIndex.getInitialProps = async (ctx) => {\n  const { campaignAddress } = ctx.query;\n  const campaign = Campaign(campaignAddress);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const approversCount = await campaign.methods.approversCount().call();\n\n  const requests = await Promise.all(\n    Array(parseInt(requestCount))\n      .fill()\n      .map((element, index) => {\n        return campaign.methods.requests(index).call();\n      })\n  );\n\n  console.log(requests);\n\n  return { campaignAddress, requests, requestCount, approversCount };\n};\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}