{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests.js\";\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\n\nconst RequestIndex = ({\n  campaignAddress\n}) => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/campaigns/[campaignAddress]/requests/new\",\n      as: `/campaigns/${campaignAddress}/requests/new`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          children: \"Add Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nRequestIndex.getInitialProps = async ctx => {\n  const {\n    campaignAddress\n  } = ctx.query;\n  const campaign = Campaign(campaignAddress);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const requests = await Promise.all(Array(requestCount).fill().map((element, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  console.log(requests);\n  return {\n    campaignAddress\n  };\n};\n\nexport default RequestIndex;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests.js"],"names":["React","Button","Link","Layout","Campaign","RequestIndex","campaignAddress","getInitialProps","ctx","query","campaign","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","fill","map","element","index","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC5C,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,IAAI,EAAC,2CADP;AAEE,MAAA,EAAE,EAAG,cAAaA,eAAgB,eAFpC;AAAA,6BAIE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;AAgBAD,YAAY,CAACE,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC5C,QAAM;AAAEF,IAAAA;AAAF,MAAsBE,GAAG,CAACC,KAAhC;AACA,QAAMC,QAAQ,GAAGN,QAAQ,CAACE,eAAD,CAAzB;AACA,QAAMK,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAA3B;AAEA,QAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACP,YAAD,CAAL,CACGQ,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,WAAOZ,QAAQ,CAACE,OAAT,CAAiBG,QAAjB,CAA0BO,KAA1B,EAAiCR,IAAjC,EAAP;AACD,GAJH,CADqB,CAAvB;AAQAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAEA,SAAO;AAAET,IAAAA;AAAF,GAAP;AACD,CAhBD;;AAkBA,eAAeD,YAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\n\nconst RequestIndex = ({ campaignAddress }) => {\n  return (\n    <Layout>\n      <h3>Requests</h3>\n      <Link\n        href='/campaigns/[campaignAddress]/requests/new'\n        as={`/campaigns/${campaignAddress}/requests/new`}\n      >\n        <a>\n          <Button primary>Add Request</Button>\n        </a>\n      </Link>\n    </Layout>\n  );\n};\n\nRequestIndex.getInitialProps = async (ctx) => {\n  const { campaignAddress } = ctx.query;\n  const campaign = Campaign(campaignAddress);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n\n  const requests = await Promise.all(\n    Array(requestCount)\n      .fill()\n      .map((element, index) => {\n        return campaign.methods.requests(index).call();\n      })\n  );\n\n  console.log(requests);\n\n  return { campaignAddress };\n};\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}