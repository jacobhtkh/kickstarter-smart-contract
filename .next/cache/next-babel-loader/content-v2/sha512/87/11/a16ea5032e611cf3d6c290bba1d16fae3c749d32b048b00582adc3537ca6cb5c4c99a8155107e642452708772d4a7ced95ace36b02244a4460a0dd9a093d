{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/components/RequestRow.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nvar RequestRow = function RequestRow(_ref) {\n  var id = _ref.id,\n      request = _ref.request,\n      approversCount = _ref.approversCount,\n      address = _ref.address;\n  var Row = Table.Row,\n      Cell = Table.Cell;\n  var readyToFinalize = request.approvalCount > approversCount / 2;\n\n  var onApprove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context.sent;\n              _context.next = 6;\n              return campaign.methods.approveRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onApprove() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinalize = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context2.sent;\n              _context2.next = 6;\n              return campaign.methods.finalizeRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinalize() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize,\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: web3.utils.fromWei(request.value, 'ether')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: [request.approvalCount, \"/\", approversCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: onApprove,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        basic: true,\n        onClick: onFinalize,\n        children: \"Finalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = RequestRow;\nexport default RequestRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestRow\");","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/components/RequestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","id","request","approversCount","address","Row","Cell","readyToFinalize","approvalCount","onApprove","campaign","eth","getAccounts","accounts","methods","approveRequest","send","from","onFinalize","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nconst RequestRow = ({ id, request, approversCount, address }) => {\n  const { Row, Cell } = Table;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApprove = async () => {\n    const campaign = Campaign(address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.approveRequest(id).send({\n      from: accounts[0],\n    });\n  };\n\n  const onFinalize = async () => {\n    const campaign = Campaign(address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.finalizeRequest(id).send({\n      from: accounts[0],\n    });\n  };\n\n  return (\n    <Row disabled={request.complete} positive={readyToFinalize}>\n      <Cell>{id}</Cell>\n      <Cell>{request.description}</Cell>\n      <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n      <Cell>{request.recipient}</Cell>\n      <Cell>\n        {request.approvalCount}/{approversCount}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button color='green' basic onClick={onApprove}>\n            Approve\n          </Button>\n        )}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button color='teal' basic onClick={onFinalize}>\n            Finalize\n          </Button>\n        )}\n      </Cell>\n    </Row>\n  );\n};\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}