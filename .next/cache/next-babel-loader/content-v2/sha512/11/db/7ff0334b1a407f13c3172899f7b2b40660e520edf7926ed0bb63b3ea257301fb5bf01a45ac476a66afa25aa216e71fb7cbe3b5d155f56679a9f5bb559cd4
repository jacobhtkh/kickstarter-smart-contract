{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/index.js\";\nimport React from 'react'; // import { useEffect, useState } from 'react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Card } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\n\nconst CampaignIndex = ({\n  campaigns\n}) => {\n  // Next JS means we dont need all of this code due to server side rendering.\n  // const [campaigns, setCampaigns] = useState([]);\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   void (async function fetchFactoryData() {\n  //     const campaigns = await factory.methods.getDeployedCampaigns().call();\n  //     console.log(campaigns);\n  //     setCampaigns(campaigns);\n  //   })();\n  //   return () => {\n  //     abortController.abort();\n  //   };\n  // }, []);\n  const renderCampaigns = () => {\n    const items = campaigns.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"View Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 22\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderCampaigns()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\nCampaignIndex.getInitialProps = async () => {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n  return {\n    campaigns\n  };\n};\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/index.js"],"names":["React","Card","factory","CampaignIndex","campaigns","renderCampaigns","items","map","address","header","description","fluid","getInitialProps","methods","getDeployedCampaigns","call"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,kCAAP;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACvC;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAeC,OAAD,IAAa;AACvC,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KANa,CAAd;AAQA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAVD;;AAYA,sBAAO;AAAA,cAAMD,eAAe;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;AAiCAF,aAAa,CAACS,eAAd,GAAgC,YAAY;AAC1C,QAAMR,SAAS,GAAG,MAAMF,OAAO,CAACW,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB;AAEA,SAAO;AAAEX,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,aAAf","sourcesContent":["import React from 'react';\n// import { useEffect, useState } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { Card } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\n\nconst CampaignIndex = ({ campaigns }) => {\n  // Next JS means we dont need all of this code due to server side rendering.\n  // const [campaigns, setCampaigns] = useState([]);\n\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n\n  //   void (async function fetchFactoryData() {\n  //     const campaigns = await factory.methods.getDeployedCampaigns().call();\n  //     console.log(campaigns);\n  //     setCampaigns(campaigns);\n  //   })();\n\n  //   return () => {\n  //     abortController.abort();\n  //   };\n  // }, []);\n\n  const renderCampaigns = () => {\n    const items = campaigns.map((address) => {\n      return {\n        header: address,\n        description: <a>View Campaign</a>,\n        fluid: true,\n      };\n    });\n\n    return <Card.Group items={items} />;\n  };\n\n  return <div>{renderCampaigns()}</div>;\n};\n\nCampaignIndex.getInitialProps = async () => {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n  return { campaigns };\n};\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}