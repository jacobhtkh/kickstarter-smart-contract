{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport factory from '../ethereum/factory';\n\nconst CampaignIndex = ({\n  campaigns\n}) => {\n  // const [campaigns, setCampaigns] = useState([]);\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   void (async function fetchFactoryData() {\n  //     const campaigns = await factory.methods.getDeployedCampaigns().call();\n  //     console.log(campaigns);\n  //     setCampaigns(campaigns);\n  //   })();\n  //   return () => {\n  //     abortController.abort();\n  //   };\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: campaigns[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\nCampaignIndex.getInitialProps = async () => {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n  return {\n    campaigns\n  };\n};\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/index.js"],"names":["React","useEffect","useState","factory","CampaignIndex","campaigns","getInitialProps","methods","getDeployedCampaigns","call"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACvC;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBAAO;AAAA,cAAKA,SAAS,CAAC,CAAD;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;AAoBAD,aAAa,CAACE,eAAd,GAAgC,YAAY;AAC1C,QAAMD,SAAS,GAAG,MAAMF,OAAO,CAACI,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB;AAEA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport factory from '../ethereum/factory';\n\nconst CampaignIndex = ({ campaigns }) => {\n  // const [campaigns, setCampaigns] = useState([]);\n\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n\n  //   void (async function fetchFactoryData() {\n  //     const campaigns = await factory.methods.getDeployedCampaigns().call();\n  //     console.log(campaigns);\n  //     setCampaigns(campaigns);\n  //   })();\n\n  //   return () => {\n  //     abortController.abort();\n  //   };\n  // }, []);\n\n  return <h1>{campaigns[0]}</h1>;\n};\n\nCampaignIndex.getInitialProps = async () => {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n  return { campaigns };\n};\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}