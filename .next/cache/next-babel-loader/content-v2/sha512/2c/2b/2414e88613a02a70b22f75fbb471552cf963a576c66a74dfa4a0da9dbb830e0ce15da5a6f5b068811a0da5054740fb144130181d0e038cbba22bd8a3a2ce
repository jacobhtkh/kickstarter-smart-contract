{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests/new.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Message, Input } from 'semantic-ui-react';\nimport Campaign from '../../../../ethereum/campaign';\nimport web3 from '../../../../ethereum/web3';\nimport Link from 'next/link';\nimport { Router } from 'next/router';\nimport Layout from '../../../../components/Layout';\n\nconst RequestNew = ({\n  campaignAddress\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: recipient,\n    1: setRecipient\n  } = useState('');\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const campaign = Campaign(campaignAddress);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.createRequest(description, web3.utils.toWei(value, 'ether'), recipient).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: description,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Value in Ether\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: event => setValue(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: recipient,\n          onChange: event => setRecipient(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \"Create!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nRequestNew.getInitialProps = async ctx => {\n  const {\n    campaignAddress\n  } = ctx.query;\n  return {\n    campaignAddress\n  };\n};\n\nexport default RequestNew;","map":{"version":3,"sources":["/Users/jacob/Desktop/Blockchain/Ethereum-Refresher/kickstart/pages/campaigns/[campaignAddress]/requests/new.js"],"names":["React","useState","Form","Button","Message","Input","Campaign","web3","Link","Router","Layout","RequestNew","campaignAddress","value","setValue","description","setDescription","recipient","setRecipient","onSubmit","event","preventDefault","campaign","accounts","eth","getAccounts","methods","createRequest","utils","toWei","send","from","err","target","getInitialProps","ctx","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Message, Input } from 'semantic-ui-react';\nimport Campaign from '../../../../ethereum/campaign';\nimport web3 from '../../../../ethereum/web3';\nimport Link from 'next/link';\nimport { Router } from 'next/router';\nimport Layout from '../../../../components/Layout';\n\nconst RequestNew = ({ campaignAddress }) => {\n  const [value, setValue] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipient, setRecipient] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    const campaign = Campaign(campaignAddress);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods\n        .createRequest(description, web3.utils.toWei(value, 'ether'), recipient)\n        .send({ from: accounts[0] });\n    } catch (err) {}\n  };\n\n  return (\n    <Layout>\n      <h3>Create a Request</h3>\n      <Form onSubmit={onSubmit}>\n        <Form.Field>\n          <label>Description</label>\n          <Input\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <label>Value in Ether</label>\n          <Input\n            value={value}\n            onChange={(event) => setValue(event.target.value)}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <label>Recipient</label>\n          <Input\n            value={recipient}\n            onChange={(event) => setRecipient(event.target.value)}\n          />\n        </Form.Field>\n\n        <Button primary>Create!</Button>\n      </Form>\n    </Layout>\n  );\n};\n\nRequestNew.getInitialProps = async (ctx) => {\n  const { campaignAddress } = ctx.query;\n\n  return { campaignAddress };\n};\n\nexport default RequestNew;\n"]},"metadata":{},"sourceType":"module"}